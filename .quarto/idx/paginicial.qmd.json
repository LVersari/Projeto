{"title":"Função para converter graus, minutos e segundos para graus decimais","markdown":{"yaml":{"format":"html","editor":"visual","message":false,"warning":false},"headingText":"Função para converter graus, minutos e segundos para graus decimais","containsRefs":false,"markdown":"\n\n```{r}\noptions(\"install.lock\"=FALSE)\nlibrary(conflicted)\nconflict_prefer(\"filter\", \"dplyr\")\nconflict_prefer(\"lag\", \"dplyr\")\n```\n\n**1. Carregando pacotes**\n\nPara as análises e visualização de dados utilizou os seguintes pacotes, com o carregamento usando a função `library(nome do pacote)`:\n\n```{r}\nlibrary(rnaturalearthhires)\n\nlibrary(rnaturalearth)\n\nlibrary(tidyverse)\n\nlibrary(sf)\n\nlibrary(ggiraph)\n```\n\n**2. Plotagem Mapa (origem dos isolados)**\n\nFunção para converter graus, minutos e segundos para graus decimais\n\n```{r}\ndms_to_decimal <- function(dms, direction) {\n  dms_split <- str_split(dms, \"[°′”’\\\"]\")[[1]]\n  degrees <- as.numeric(dms_split[1])\n  minutes <- as.numeric(dms_split[2])\n  seconds <- as.numeric(dms_split[3])\n  decimal <- degrees + minutes / 60 + seconds / 3600\n  if (direction %in% c(\"S\", \"W\")) {\n    decimal <- -decimal\n  }\n  return(decimal)\n}\n\n# Dados das fazendas\nfazendas <- data.frame(\n  nome = c(\"1, 2 e 3 - Faz. Águas de Março\", \"4 - Faz. Harmonia\", \"5 - Camila\", \"6 - Tamara/Juliano\", \"7 - Faz. Sinai\", \n           \"8 - Faz. Chapadão\", \"9 - Geuzilene\"),\n  cidade = c(\"Sapezal - MT\", \"Sapezal - MT\", \"Sapezal - MT\", \"Diamantino - MT\", \"Santa Terezinha - MT\", \"Matupá-MT\", \"Querência - MT\"),\n  lat = c(\"13°03’59”S\", \"13°49’24”S\", \"13°32’23”S\", \"14°10’49”S\", \"10°17”20”S\", \n          \"10°7’27,6”S\", \"12°20’27”S\"),\n  lon = c(\"58°38’14”W\", \"58°45’35”W\", \"58°42’47”W\", \"56°32’46”W\", \"50°47’53”W\", \"54°58’33”W\", \"52°22’45”W\")\n)\n\n# Converter coordenadas para graus decimais\nfazendas <- fazendas %>%\n  mutate(lat_decimal = mapply(dms_to_decimal, str_replace_all(lat, \"[^0-9°′”’\\\"]\", \"\"), ifelse(grepl(\"S\", lat), \"S\", \"N\")),\n         lon_decimal = mapply(dms_to_decimal, str_replace_all(lon, \"[^0-9°′”’\\\"]\", \"\"), ifelse(grepl(\"W\", lon), \"W\", \"E\")))\n\n# Transformando os pontos em um objeto sf\nfazendas_sf <- st_as_sf(fazendas, coords = c(\"lon_decimal\", \"lat_decimal\"), crs = 4326)\n\n# Dados do Brasil\nBRA <- ne_states(country = \"Brazil\", returnclass = \"sf\")\n\n# Plotando o mapa com os pontos e a legenda\ngg <- ggplot(BRA) +\n  geom_sf(fill = \"white\", color = \"black\", size = 0.3) +\n  geom_sf_interactive(data = fazendas_sf, aes(color = nome, tooltip = paste(\"Nome:\", nome, \"<br>Cidade:\", cidade, \"<br>Coordenadas:\", lat, lon)), size = 3) +\n  theme_minimal() +\n  labs(title = \"Mapa de pontos de coleta dos isolados\",\n       color = \"Tratamento/Fazenda\")\n\n# Renderizando o gráfico interativo\ngirafe(ggobj = gg)\n```\n\n**3. Carregando o Dataset**\n\nPara a leitura e importação de dados em Excel, utilizaremos o pacote \\`readxl\\`, para isso é necessário que instale e carregue este pacote. O pacote \\`readxl\\`, permite a leitura de arquivos Excel (.xlsx) sendo especialmente útil para importar dados que são frequentemente armazenados em planilhas.\n\n```{r}\nlibrary(readxl)\ndados <- read_excel(\"SensibilidadeCory2020.xlsx\")\nhead(dados)\n```\n\n**4. Visualização de dados**\n\nPara a visualização do conjunto de dados primeiramente foi calculadas as médias de diâmetro médio da colônia de cada isolado, em cada fungicida, dose e avaliação.\n\nUtilizou a função `ggplot()` do pacote `tidyverse` e diferentes formatos gráficos. A variável resposta crescimento micelial (mm) foi visualizada por fungicida, em cada nível dos fatores: Isolados, Avaliações e Doses.\n\n**Gráfico de pontos**: Esse tipo de gráfico é interessante para visualização da dispersão dos dados, onde cada ponto representa uma observação. Foi utilizado esse tipo de gráfico no trabalho devido o número de repetições (3) ser relativamente pequeno, facilitando a visualização. Utilizou a função `geom_point()` para plotar o gráfico.\n\n**Gráfico de linhas**: Utilizou a função `geom_line()` do pacote `ggplot2` para criar um gráfico de linhas. Esse tipo de gráfico é usado para visualizar tendências ou padrões ao longo de uma variável contínua, como, tempo, temperatura, doses.\n\nO gráfico de linhas aqui foi utilizado para ligar os pontos, mostrando o comportamento do crescimento micelial (mm) em em relação as variáveis contínuas: doses e avaliações no tempo.\n\n**`facet_wrap()`**: foi usado para criar uma grade gráfica, onde cada subgráfico representa um subconjunto dos dados.\n\nPara melhor visualização das variáveis respostas, utilizamos a \"Dose\" como um fator e adicionamos facetas com a função `facet_wrap()` para vizualizarmos os tratamentos separadamente.\n\n**4.1 Crescimento micelial x Doses (Isolados)**\n\n```{r}\nlibrary(ggsci)\n\n# Médias\nmedias <- dados |> \n  group_by(trat,dose, aval, isolado) |> \n  summarize(media_diam = mean(diam, na.rm = TRUE), .groups = 'drop') |> \n  ungroup()\n\n\n# Função de gráficos para cada tratamento\nplot_graf <- function(data, tratam) {\n  ggplot(data, aes(x = dose, y = media_diam, color = factor(isolado), group = isolado)) +\n    geom_point()+\n    geom_line()+\n    facet_wrap(~aval)+\n    labs(title = paste(\"Tratamento:\", tratam),\n         x = \"Concentração\",\n         y = \"Diâmetro Micelial Médio (mm)\",\n         color = \"Isolados\")+\n    scale_color_jco()+\n    theme_minimal()+\n    theme(legend.position = \"bottom\" )\n}\n\n# Função para filtrar e plotar os gráficos para cada tratamento\nfor (tratam in unique(medias$trat)) {\n  data <- medias |>\n    filter(trat == tratam)\n  print(plot_graf(data, tratam))\n  dev.flush()\n}\n```\n\n**4.2 Crescimento micelial x Doses (Avaliações)**\n\n```{r}\n# Médias\nmedias <- dados |> \n  group_by(trat, dose, aval, isolado) |> \n  summarize(media_diam = mean(diam, na.rm = TRUE), .groups = 'drop') |> \n  ungroup()\n\n\n# Função de gráficos para cada tratamento\nplot_graf <- function(data, tratam) {\n  ggplot(data, aes(x = dose, y = media_diam, color = factor(aval), group = aval)) +\n    geom_point()+\n    geom_line()+\n    facet_wrap(~isolado)+\n    labs(title = paste(\"Tratamento:\", tratam),\n         x = \"Concentração\",\n         y = \"Diâmetro Micelial Médio (mm)\",\n         color = \"Avaliação\")+\n    scale_color_jco()+\n    theme_minimal()+\n    theme(legend.position = \"bottom\" )\n}\n\n# Função para filtrar e plotar os gráficos para cada tratamento\nfor (tratam in unique(medias$trat)) {\n  data <- medias |>\n    filter(trat == tratam)\n  print(plot_graf(data, tratam))\n  dev.flush()\n}\n```\n\n**4.3 Crescimento micelial x Avaliações (Doses)**\n\n```{r}\nmedias <- dados |> \n  group_by(trat, dose, aval, isolado) |> \n  summarize(media_diam = mean(diam, na.rm = TRUE), .groups = 'drop') |> \n  ungroup()\n\n\n# Função de gráficos para cada tratamento\nplot_graf <- function(data, tratam) {\n  ggplot(data, aes(x = aval, y = media_diam, color = factor(dose), group = dose)) +\n    geom_point()+\n    geom_line()+\n    facet_wrap(~isolado)+\n    labs(title = paste(\"Tratamento:\", tratam),\n         x = \"Avaliações\",\n         y = \"Diâmetro Micelial Médio (mm)\",\n         color = \"Dose\")+\n    scale_color_jco()+\n    theme_minimal()+\n    theme(legend.position = \"bottom\" )\n}\n\n# Função para filtrar e plotar os gráficos para cada tratamento\nfor (tratam in unique(medias$trat)) {\n  data <- medias |>\n    filter(trat == tratam)\n  print(plot_graf(data, tratam))\n  dev.flush()\n}\n```\n\n**Hipóteses**\n\nHipótese nula (H0): Não há diferença de sensibilidade entre os isolados para nenhum dos fungicidas.\n\nHipótese alternativa (H1): Há pelo menos uma diferença de sensibilidade entre os isolados para um dos fungicidas.\n\n**MODELOS DE REGRESSÃO - USANDO DIAM**\n\n```{r}\nlibrary(dplyr)\nlibrary(drc)\nlibrary(ggplot2)\n\n# Função para ajustar múltiplos modelos de dose-resposta e selecionar o melhor modelo\najustar_e_selecionar_melhor_modelo <- function(dados, tratamento, isolado, avaliacao) {\n  data_filtrado <- dados %>%\n    filter(trat == tratamento, isolado == isolado, aval == avaliacao) %>%\n    group_by(dose) %>%\n    slice_head(n = 3) %>%\n    ungroup()\n  \n  # Ajustar os modelos\n  modelo1 <- tryCatch(drm(diam ~ dose, data = data_filtrado, fct = LN.3()), error = function(e) NULL)\n  modelo2 <- tryCatch(drm(diam ~ dose, data = data_filtrado, fct = LL.3()), error = function(e) NULL)\n  modelo3 <- tryCatch(drm(diam ~ dose, data = data_filtrado, fct = W1.3()), error = function(e) NULL)\n  modelo4 <- tryCatch(drm(diam ~ dose, data = data_filtrado, fct = W2.3()), error = function(e) NULL)\n  \n  # Selecionar o melhor modelo com base no AIC\n  modelos <- list(LN.3 = modelo1, LL.3 = modelo2, W1.3 = modelo3, W2.3 = modelo4)\n  modelos_validos <- modelos[!sapply(modelos, is.null)]\n  \n  if (length(modelos_validos) > 0) {\n    aic_values <- sapply(modelos_validos, AIC, simplify = TRUE)\n    melhor_modelo <- names(aic_values)[which.min(aic_values)]\n    return(list(modelo = modelos_validos[[melhor_modelo]], tipo = melhor_modelo, AIC = aic_values[melhor_modelo]))\n  } else {\n    return(NULL)\n  }\n}\n\n# Lista para armazenar os melhores modelos\nmelhores_modelos <- list()\n\n# Lista de tratamentos, isolados e avaliações únicos\ntratamentos <- unique(dados$trat)\nisolados <- unique(dados$isolado)\navaliacoes <- unique(dados$aval)\n\n# Iterar sobre todas as combinações de tratamento, isolado e avaliação\nfor (tratamento in tratamentos) {\n  for (isolado in isolados) {\n    for (avaliacao in avaliacoes) {\n      # Ajustar e selecionar o melhor modelo para a combinação atual\n      melhor_modelo <- ajustar_e_selecionar_melhor_modelo(dados, tratamento, isolado, avaliacao)\n      chave <- paste(tratamento, isolado, avaliacao, sep = \"-\")\n      melhores_modelos[[chave]] <- melhor_modelo\n    }\n  }\n}\n\n# Função para plotar os dados e o melhor modelo\nplotar_melhor_modelo <- function(dados, melhor_modelo, tratamento, isolado, avaliacao) {\n  data_filtrado <- dados %>%\n    filter(trat == tratamento, isolado == isolado, aval == avaliacao) %>%\n    group_by(dose) %>%\n    slice_head(n = 3) %>%\n    ungroup()\n  \n  if (!is.null(melhor_modelo$modelo)) {\n    ggplot(data_filtrado, aes(x = dose, y = diam)) +\n      geom_point() +\n      geom_line(aes(y = predict(melhor_modelo$modelo)), color = 'blue') +\n      labs(title = paste(\"Tratamento:\", tratamento, \"Isolado:\", isolado, \"Avaliação:\", avaliacao),\n           subtitle = paste(\"Melhor modelo:\", melhor_modelo$tipo, \"AIC:\", round(melhor_modelo$AIC, 2)),\n           x = \"Dose\",\n           y = \"Diâmetro\") +\n      theme_minimal()\n  } else {\n    ggplot(data_filtrado, aes(x = dose, y = diam)) +\n      geom_point() +\n      labs(title = paste(\"Tratamento:\", tratamento, \"Isolado:\", isolado, \"Avaliação:\", avaliacao),\n           subtitle = \"Nenhum modelo ajustado\",\n           x = \"Dose\",\n           y = \"Diâmetro\") +\n      theme_minimal()\n  }\n}\n\n# Plotar os gráficos para cada combinação\nfor (chave in names(melhores_modelos)) {\n  comb <- unlist(strsplit(chave, \"-\"))\n  tratamento <- comb[1]\n  isolado <- as.numeric(comb[2])\n  avaliacao <- as.numeric(comb[3])\n  melhor_modelo <- melhores_modelos[[chave]]\n  \n  print(plotar_melhor_modelo(dados, melhor_modelo, tratamento, isolado, avaliacao))\n}\n```\n\n```{r}\nlibrary(ec50estimator)\ndf_ec50_LN <- estimate_EC50(diam ~ dose,\n                         data = dados,\n                         isolate_col = \"isolado\",\n                         strata_col = c(\"trat\", \"aval\"),\n                         interval = \"delta\",\n                         fct = drc::LN.3())\ndf_ec50_LL <- estimate_EC50(diam ~ dose,\n                         data = dados,\n                         isolate_col = \"isolado\",\n                         strata_col = c(\"trat\", \"aval\"),\n                         interval = \"delta\",\n                         fct = drc::LL.3())\ndf_ec50_W1 <- estimate_EC50(diam ~ dose,\n                         data = dados,\n                         isolate_col = \"isolado\",\n                         strata_col = c(\"trat\", \"aval\"),\n                         interval = \"delta\",\n                         fct = drc::W1.3())\ndf_ec50_W2 <- estimate_EC50(diam ~ dose,\n                         data = dados,\n                         isolate_col = \"isolado\",\n                         strata_col = c(\"trat\", \"aval\"),\n                         interval = \"delta\",\n                         fct = drc::W2.3())\nhead(df_ec50_LL)\n\nlibrary(DT)\ndatatable(df_ec50_W1 ,\n          extensions = 'Buttons',\n          options = list(\n            dom = 'Bfrtip',\n            buttons = c('copy', 'excel')))\n\ndatatable(df_ec50_W2 ,\n          extensions = 'Buttons',\n          options = list(\n            dom = 'Bfrtip',\n            buttons = c('copy', 'excel')))\n```\n\n```{r}\nlibrary(ggplot2)\nlibrary(dplyr)\n\n# Função para criar o gráfico de EC50\nplot_ec50 <- function(df_ec50, model_name) {\n  # Filtrar valores não positivos e maiores que 100\n  df_ec50 <- df_ec50 %>% filter(Estimate > 0 & Estimate < 100)\n  \n  # Visualização dos EC50s\n  p <- as.data.frame(df_ec50) %>% \n    mutate(ID = as.numeric(ID)) %>% \n    ggplot(aes(ID, Estimate, color = trat)) +\n    geom_point(size = 2) +\n    geom_errorbar(aes(ymin = Lower, ymax = Upper, color = trat), width = 0) +\n    facet_wrap(~aval, scales = \"free_x\", ncol = 2) +\n    scale_y_log10() +\n    scale_x_continuous(breaks = 1:9) +\n    scale_color_manual(values = c(\"darkred\", \"steelblue\", \"darkgreen\")) +\n    labs(x = \"Isolados\", y = \"EC50\", title = paste(\"Modelo:\", model_name)) +\n    theme_minimal() +\n    coord_flip() +\n    theme(axis.text.y = element_text(angle = 90, vjust = 0.5, hjust = 1), legend.position = \"bottom\")\n  \n  return(p)\n}\n\n# Criar gráficos para cada modelo\nplot_LN <- plot_ec50(df_ec50_LN, \"LN.3\")\nplot_LL <- plot_ec50(df_ec50_LL, \"LL.3\")\nplot_W1 <- plot_ec50(df_ec50_W1, \"W1.3\")\nplot_W2 <- plot_ec50(df_ec50_W2, \"W2.3\")\n\n# Exibir os gráficos\nprint(plot_LN)\nprint(plot_LL)\nprint(plot_W1)\nprint(plot_W2)\n```\n\n**Classificação da sensibilidade** **milecial**\n\nCom base nos critérios de informação Akaiake (AIC), foram selecionados para cada fungicida, isolado e avaliação, o melhor modelo matemático que representasse a relação **inibição do crescimento micelial (%)** *x* **Log doses fungicida (mg L^-1^),** para estimar a EC50 (Concentração efetiva de fungicida capaz de inibir 50% do crescimento micelial).\n\nCom base nos valores de EC50 foi classificada a sensibilidade dos isolados para cada fungicida e avaliação.\n\nPara os fungicidas **Fox** e **Orkestra** utilizou a classificação proposta por Edgington et al (1971).\n\nEC50 \\< 1 mg L^-1^ (alta sensibilidade) ;\n\nEC50 entre 1 mg L^-1^ e 10 mg L^-1^ (moderada sensibilidade) ;\n\nEC50 entre 10,1 mg L^-1^ e 50 mg L^-1^ (pouca sensibilidade);\n\nEC50 \\> 50 mg L^-1^ (insensibilidade).\n\nPara o fungicida **Mancozeb** a sensibilidade foi classificada em:\n\nSensibilidade (EC50 \\< 50 mg L^-1^);\n\nInsensibilidade (EC50 \\> 50 mg L^-1^).\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE}\nlibrary(magick)\nimagem <- image_read(\"sensibilidade.png\")\nprint(imagem)\n```\n\n**Interpretação**\n\nCom base na EC50 e na classificação de sensibilidade dos isolados de *Corynespora cassiicola* aos fungicidas Fox, Orkestra e Mancozeb, rejeita a hipótese nula H0.\n\nHouve diferença de sensibilidade entre os isolados testados.\n\nPara o **Fungicida** **Fox** apenas o isolado 6 apresentou alta sensibilidade em todas as avaliações. Os isolados 1, 2, 3, 4 e 5 foram insensíveis ao fungicida Fox em todas as avaliações. Enquanto que os isolados 7, 8 e 9 apresentaram mudança de sensibilidade ao longo das avaliações.\n\n**Fungicida Orkestra**: os isolados 1 e 3 foram altamente sensíveis em todas avaliações, o isolado 4 pouco sensível e o isolado 5 moderadamente sensível. Os isolados 2, 6, 7, 8 e 9 tiveram mudanças de sensibilidade ao longo das avaliações, sendo o isolado nas ultimas avaliações insensível, os isolados 6 e 8 pouco sensíveis e os isolados 7 e 9 moderadamente sensíveis.\n\n**Fungicida Mancozeb**: Todos isolados foram sensíveis ao produto.\n\nNão houve uma relação entre origem dos isolados e padrão de sensibilidade aos fungicidas testados.\n","srcMarkdownNoYaml":"\n\n```{r}\noptions(\"install.lock\"=FALSE)\nlibrary(conflicted)\nconflict_prefer(\"filter\", \"dplyr\")\nconflict_prefer(\"lag\", \"dplyr\")\n```\n\n**1. Carregando pacotes**\n\nPara as análises e visualização de dados utilizou os seguintes pacotes, com o carregamento usando a função `library(nome do pacote)`:\n\n```{r}\nlibrary(rnaturalearthhires)\n\nlibrary(rnaturalearth)\n\nlibrary(tidyverse)\n\nlibrary(sf)\n\nlibrary(ggiraph)\n```\n\n**2. Plotagem Mapa (origem dos isolados)**\n\nFunção para converter graus, minutos e segundos para graus decimais\n\n```{r}\n# Função para converter graus, minutos e segundos para graus decimais\ndms_to_decimal <- function(dms, direction) {\n  dms_split <- str_split(dms, \"[°′”’\\\"]\")[[1]]\n  degrees <- as.numeric(dms_split[1])\n  minutes <- as.numeric(dms_split[2])\n  seconds <- as.numeric(dms_split[3])\n  decimal <- degrees + minutes / 60 + seconds / 3600\n  if (direction %in% c(\"S\", \"W\")) {\n    decimal <- -decimal\n  }\n  return(decimal)\n}\n\n# Dados das fazendas\nfazendas <- data.frame(\n  nome = c(\"1, 2 e 3 - Faz. Águas de Março\", \"4 - Faz. Harmonia\", \"5 - Camila\", \"6 - Tamara/Juliano\", \"7 - Faz. Sinai\", \n           \"8 - Faz. Chapadão\", \"9 - Geuzilene\"),\n  cidade = c(\"Sapezal - MT\", \"Sapezal - MT\", \"Sapezal - MT\", \"Diamantino - MT\", \"Santa Terezinha - MT\", \"Matupá-MT\", \"Querência - MT\"),\n  lat = c(\"13°03’59”S\", \"13°49’24”S\", \"13°32’23”S\", \"14°10’49”S\", \"10°17”20”S\", \n          \"10°7’27,6”S\", \"12°20’27”S\"),\n  lon = c(\"58°38’14”W\", \"58°45’35”W\", \"58°42’47”W\", \"56°32’46”W\", \"50°47’53”W\", \"54°58’33”W\", \"52°22’45”W\")\n)\n\n# Converter coordenadas para graus decimais\nfazendas <- fazendas %>%\n  mutate(lat_decimal = mapply(dms_to_decimal, str_replace_all(lat, \"[^0-9°′”’\\\"]\", \"\"), ifelse(grepl(\"S\", lat), \"S\", \"N\")),\n         lon_decimal = mapply(dms_to_decimal, str_replace_all(lon, \"[^0-9°′”’\\\"]\", \"\"), ifelse(grepl(\"W\", lon), \"W\", \"E\")))\n\n# Transformando os pontos em um objeto sf\nfazendas_sf <- st_as_sf(fazendas, coords = c(\"lon_decimal\", \"lat_decimal\"), crs = 4326)\n\n# Dados do Brasil\nBRA <- ne_states(country = \"Brazil\", returnclass = \"sf\")\n\n# Plotando o mapa com os pontos e a legenda\ngg <- ggplot(BRA) +\n  geom_sf(fill = \"white\", color = \"black\", size = 0.3) +\n  geom_sf_interactive(data = fazendas_sf, aes(color = nome, tooltip = paste(\"Nome:\", nome, \"<br>Cidade:\", cidade, \"<br>Coordenadas:\", lat, lon)), size = 3) +\n  theme_minimal() +\n  labs(title = \"Mapa de pontos de coleta dos isolados\",\n       color = \"Tratamento/Fazenda\")\n\n# Renderizando o gráfico interativo\ngirafe(ggobj = gg)\n```\n\n**3. Carregando o Dataset**\n\nPara a leitura e importação de dados em Excel, utilizaremos o pacote \\`readxl\\`, para isso é necessário que instale e carregue este pacote. O pacote \\`readxl\\`, permite a leitura de arquivos Excel (.xlsx) sendo especialmente útil para importar dados que são frequentemente armazenados em planilhas.\n\n```{r}\nlibrary(readxl)\ndados <- read_excel(\"SensibilidadeCory2020.xlsx\")\nhead(dados)\n```\n\n**4. Visualização de dados**\n\nPara a visualização do conjunto de dados primeiramente foi calculadas as médias de diâmetro médio da colônia de cada isolado, em cada fungicida, dose e avaliação.\n\nUtilizou a função `ggplot()` do pacote `tidyverse` e diferentes formatos gráficos. A variável resposta crescimento micelial (mm) foi visualizada por fungicida, em cada nível dos fatores: Isolados, Avaliações e Doses.\n\n**Gráfico de pontos**: Esse tipo de gráfico é interessante para visualização da dispersão dos dados, onde cada ponto representa uma observação. Foi utilizado esse tipo de gráfico no trabalho devido o número de repetições (3) ser relativamente pequeno, facilitando a visualização. Utilizou a função `geom_point()` para plotar o gráfico.\n\n**Gráfico de linhas**: Utilizou a função `geom_line()` do pacote `ggplot2` para criar um gráfico de linhas. Esse tipo de gráfico é usado para visualizar tendências ou padrões ao longo de uma variável contínua, como, tempo, temperatura, doses.\n\nO gráfico de linhas aqui foi utilizado para ligar os pontos, mostrando o comportamento do crescimento micelial (mm) em em relação as variáveis contínuas: doses e avaliações no tempo.\n\n**`facet_wrap()`**: foi usado para criar uma grade gráfica, onde cada subgráfico representa um subconjunto dos dados.\n\nPara melhor visualização das variáveis respostas, utilizamos a \"Dose\" como um fator e adicionamos facetas com a função `facet_wrap()` para vizualizarmos os tratamentos separadamente.\n\n**4.1 Crescimento micelial x Doses (Isolados)**\n\n```{r}\nlibrary(ggsci)\n\n# Médias\nmedias <- dados |> \n  group_by(trat,dose, aval, isolado) |> \n  summarize(media_diam = mean(diam, na.rm = TRUE), .groups = 'drop') |> \n  ungroup()\n\n\n# Função de gráficos para cada tratamento\nplot_graf <- function(data, tratam) {\n  ggplot(data, aes(x = dose, y = media_diam, color = factor(isolado), group = isolado)) +\n    geom_point()+\n    geom_line()+\n    facet_wrap(~aval)+\n    labs(title = paste(\"Tratamento:\", tratam),\n         x = \"Concentração\",\n         y = \"Diâmetro Micelial Médio (mm)\",\n         color = \"Isolados\")+\n    scale_color_jco()+\n    theme_minimal()+\n    theme(legend.position = \"bottom\" )\n}\n\n# Função para filtrar e plotar os gráficos para cada tratamento\nfor (tratam in unique(medias$trat)) {\n  data <- medias |>\n    filter(trat == tratam)\n  print(plot_graf(data, tratam))\n  dev.flush()\n}\n```\n\n**4.2 Crescimento micelial x Doses (Avaliações)**\n\n```{r}\n# Médias\nmedias <- dados |> \n  group_by(trat, dose, aval, isolado) |> \n  summarize(media_diam = mean(diam, na.rm = TRUE), .groups = 'drop') |> \n  ungroup()\n\n\n# Função de gráficos para cada tratamento\nplot_graf <- function(data, tratam) {\n  ggplot(data, aes(x = dose, y = media_diam, color = factor(aval), group = aval)) +\n    geom_point()+\n    geom_line()+\n    facet_wrap(~isolado)+\n    labs(title = paste(\"Tratamento:\", tratam),\n         x = \"Concentração\",\n         y = \"Diâmetro Micelial Médio (mm)\",\n         color = \"Avaliação\")+\n    scale_color_jco()+\n    theme_minimal()+\n    theme(legend.position = \"bottom\" )\n}\n\n# Função para filtrar e plotar os gráficos para cada tratamento\nfor (tratam in unique(medias$trat)) {\n  data <- medias |>\n    filter(trat == tratam)\n  print(plot_graf(data, tratam))\n  dev.flush()\n}\n```\n\n**4.3 Crescimento micelial x Avaliações (Doses)**\n\n```{r}\nmedias <- dados |> \n  group_by(trat, dose, aval, isolado) |> \n  summarize(media_diam = mean(diam, na.rm = TRUE), .groups = 'drop') |> \n  ungroup()\n\n\n# Função de gráficos para cada tratamento\nplot_graf <- function(data, tratam) {\n  ggplot(data, aes(x = aval, y = media_diam, color = factor(dose), group = dose)) +\n    geom_point()+\n    geom_line()+\n    facet_wrap(~isolado)+\n    labs(title = paste(\"Tratamento:\", tratam),\n         x = \"Avaliações\",\n         y = \"Diâmetro Micelial Médio (mm)\",\n         color = \"Dose\")+\n    scale_color_jco()+\n    theme_minimal()+\n    theme(legend.position = \"bottom\" )\n}\n\n# Função para filtrar e plotar os gráficos para cada tratamento\nfor (tratam in unique(medias$trat)) {\n  data <- medias |>\n    filter(trat == tratam)\n  print(plot_graf(data, tratam))\n  dev.flush()\n}\n```\n\n**Hipóteses**\n\nHipótese nula (H0): Não há diferença de sensibilidade entre os isolados para nenhum dos fungicidas.\n\nHipótese alternativa (H1): Há pelo menos uma diferença de sensibilidade entre os isolados para um dos fungicidas.\n\n**MODELOS DE REGRESSÃO - USANDO DIAM**\n\n```{r}\nlibrary(dplyr)\nlibrary(drc)\nlibrary(ggplot2)\n\n# Função para ajustar múltiplos modelos de dose-resposta e selecionar o melhor modelo\najustar_e_selecionar_melhor_modelo <- function(dados, tratamento, isolado, avaliacao) {\n  data_filtrado <- dados %>%\n    filter(trat == tratamento, isolado == isolado, aval == avaliacao) %>%\n    group_by(dose) %>%\n    slice_head(n = 3) %>%\n    ungroup()\n  \n  # Ajustar os modelos\n  modelo1 <- tryCatch(drm(diam ~ dose, data = data_filtrado, fct = LN.3()), error = function(e) NULL)\n  modelo2 <- tryCatch(drm(diam ~ dose, data = data_filtrado, fct = LL.3()), error = function(e) NULL)\n  modelo3 <- tryCatch(drm(diam ~ dose, data = data_filtrado, fct = W1.3()), error = function(e) NULL)\n  modelo4 <- tryCatch(drm(diam ~ dose, data = data_filtrado, fct = W2.3()), error = function(e) NULL)\n  \n  # Selecionar o melhor modelo com base no AIC\n  modelos <- list(LN.3 = modelo1, LL.3 = modelo2, W1.3 = modelo3, W2.3 = modelo4)\n  modelos_validos <- modelos[!sapply(modelos, is.null)]\n  \n  if (length(modelos_validos) > 0) {\n    aic_values <- sapply(modelos_validos, AIC, simplify = TRUE)\n    melhor_modelo <- names(aic_values)[which.min(aic_values)]\n    return(list(modelo = modelos_validos[[melhor_modelo]], tipo = melhor_modelo, AIC = aic_values[melhor_modelo]))\n  } else {\n    return(NULL)\n  }\n}\n\n# Lista para armazenar os melhores modelos\nmelhores_modelos <- list()\n\n# Lista de tratamentos, isolados e avaliações únicos\ntratamentos <- unique(dados$trat)\nisolados <- unique(dados$isolado)\navaliacoes <- unique(dados$aval)\n\n# Iterar sobre todas as combinações de tratamento, isolado e avaliação\nfor (tratamento in tratamentos) {\n  for (isolado in isolados) {\n    for (avaliacao in avaliacoes) {\n      # Ajustar e selecionar o melhor modelo para a combinação atual\n      melhor_modelo <- ajustar_e_selecionar_melhor_modelo(dados, tratamento, isolado, avaliacao)\n      chave <- paste(tratamento, isolado, avaliacao, sep = \"-\")\n      melhores_modelos[[chave]] <- melhor_modelo\n    }\n  }\n}\n\n# Função para plotar os dados e o melhor modelo\nplotar_melhor_modelo <- function(dados, melhor_modelo, tratamento, isolado, avaliacao) {\n  data_filtrado <- dados %>%\n    filter(trat == tratamento, isolado == isolado, aval == avaliacao) %>%\n    group_by(dose) %>%\n    slice_head(n = 3) %>%\n    ungroup()\n  \n  if (!is.null(melhor_modelo$modelo)) {\n    ggplot(data_filtrado, aes(x = dose, y = diam)) +\n      geom_point() +\n      geom_line(aes(y = predict(melhor_modelo$modelo)), color = 'blue') +\n      labs(title = paste(\"Tratamento:\", tratamento, \"Isolado:\", isolado, \"Avaliação:\", avaliacao),\n           subtitle = paste(\"Melhor modelo:\", melhor_modelo$tipo, \"AIC:\", round(melhor_modelo$AIC, 2)),\n           x = \"Dose\",\n           y = \"Diâmetro\") +\n      theme_minimal()\n  } else {\n    ggplot(data_filtrado, aes(x = dose, y = diam)) +\n      geom_point() +\n      labs(title = paste(\"Tratamento:\", tratamento, \"Isolado:\", isolado, \"Avaliação:\", avaliacao),\n           subtitle = \"Nenhum modelo ajustado\",\n           x = \"Dose\",\n           y = \"Diâmetro\") +\n      theme_minimal()\n  }\n}\n\n# Plotar os gráficos para cada combinação\nfor (chave in names(melhores_modelos)) {\n  comb <- unlist(strsplit(chave, \"-\"))\n  tratamento <- comb[1]\n  isolado <- as.numeric(comb[2])\n  avaliacao <- as.numeric(comb[3])\n  melhor_modelo <- melhores_modelos[[chave]]\n  \n  print(plotar_melhor_modelo(dados, melhor_modelo, tratamento, isolado, avaliacao))\n}\n```\n\n```{r}\nlibrary(ec50estimator)\ndf_ec50_LN <- estimate_EC50(diam ~ dose,\n                         data = dados,\n                         isolate_col = \"isolado\",\n                         strata_col = c(\"trat\", \"aval\"),\n                         interval = \"delta\",\n                         fct = drc::LN.3())\ndf_ec50_LL <- estimate_EC50(diam ~ dose,\n                         data = dados,\n                         isolate_col = \"isolado\",\n                         strata_col = c(\"trat\", \"aval\"),\n                         interval = \"delta\",\n                         fct = drc::LL.3())\ndf_ec50_W1 <- estimate_EC50(diam ~ dose,\n                         data = dados,\n                         isolate_col = \"isolado\",\n                         strata_col = c(\"trat\", \"aval\"),\n                         interval = \"delta\",\n                         fct = drc::W1.3())\ndf_ec50_W2 <- estimate_EC50(diam ~ dose,\n                         data = dados,\n                         isolate_col = \"isolado\",\n                         strata_col = c(\"trat\", \"aval\"),\n                         interval = \"delta\",\n                         fct = drc::W2.3())\nhead(df_ec50_LL)\n\nlibrary(DT)\ndatatable(df_ec50_W1 ,\n          extensions = 'Buttons',\n          options = list(\n            dom = 'Bfrtip',\n            buttons = c('copy', 'excel')))\n\ndatatable(df_ec50_W2 ,\n          extensions = 'Buttons',\n          options = list(\n            dom = 'Bfrtip',\n            buttons = c('copy', 'excel')))\n```\n\n```{r}\nlibrary(ggplot2)\nlibrary(dplyr)\n\n# Função para criar o gráfico de EC50\nplot_ec50 <- function(df_ec50, model_name) {\n  # Filtrar valores não positivos e maiores que 100\n  df_ec50 <- df_ec50 %>% filter(Estimate > 0 & Estimate < 100)\n  \n  # Visualização dos EC50s\n  p <- as.data.frame(df_ec50) %>% \n    mutate(ID = as.numeric(ID)) %>% \n    ggplot(aes(ID, Estimate, color = trat)) +\n    geom_point(size = 2) +\n    geom_errorbar(aes(ymin = Lower, ymax = Upper, color = trat), width = 0) +\n    facet_wrap(~aval, scales = \"free_x\", ncol = 2) +\n    scale_y_log10() +\n    scale_x_continuous(breaks = 1:9) +\n    scale_color_manual(values = c(\"darkred\", \"steelblue\", \"darkgreen\")) +\n    labs(x = \"Isolados\", y = \"EC50\", title = paste(\"Modelo:\", model_name)) +\n    theme_minimal() +\n    coord_flip() +\n    theme(axis.text.y = element_text(angle = 90, vjust = 0.5, hjust = 1), legend.position = \"bottom\")\n  \n  return(p)\n}\n\n# Criar gráficos para cada modelo\nplot_LN <- plot_ec50(df_ec50_LN, \"LN.3\")\nplot_LL <- plot_ec50(df_ec50_LL, \"LL.3\")\nplot_W1 <- plot_ec50(df_ec50_W1, \"W1.3\")\nplot_W2 <- plot_ec50(df_ec50_W2, \"W2.3\")\n\n# Exibir os gráficos\nprint(plot_LN)\nprint(plot_LL)\nprint(plot_W1)\nprint(plot_W2)\n```\n\n**Classificação da sensibilidade** **milecial**\n\nCom base nos critérios de informação Akaiake (AIC), foram selecionados para cada fungicida, isolado e avaliação, o melhor modelo matemático que representasse a relação **inibição do crescimento micelial (%)** *x* **Log doses fungicida (mg L^-1^),** para estimar a EC50 (Concentração efetiva de fungicida capaz de inibir 50% do crescimento micelial).\n\nCom base nos valores de EC50 foi classificada a sensibilidade dos isolados para cada fungicida e avaliação.\n\nPara os fungicidas **Fox** e **Orkestra** utilizou a classificação proposta por Edgington et al (1971).\n\nEC50 \\< 1 mg L^-1^ (alta sensibilidade) ;\n\nEC50 entre 1 mg L^-1^ e 10 mg L^-1^ (moderada sensibilidade) ;\n\nEC50 entre 10,1 mg L^-1^ e 50 mg L^-1^ (pouca sensibilidade);\n\nEC50 \\> 50 mg L^-1^ (insensibilidade).\n\nPara o fungicida **Mancozeb** a sensibilidade foi classificada em:\n\nSensibilidade (EC50 \\< 50 mg L^-1^);\n\nInsensibilidade (EC50 \\> 50 mg L^-1^).\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE}\nlibrary(magick)\nimagem <- image_read(\"sensibilidade.png\")\nprint(imagem)\n```\n\n**Interpretação**\n\nCom base na EC50 e na classificação de sensibilidade dos isolados de *Corynespora cassiicola* aos fungicidas Fox, Orkestra e Mancozeb, rejeita a hipótese nula H0.\n\nHouve diferença de sensibilidade entre os isolados testados.\n\nPara o **Fungicida** **Fox** apenas o isolado 6 apresentou alta sensibilidade em todas as avaliações. Os isolados 1, 2, 3, 4 e 5 foram insensíveis ao fungicida Fox em todas as avaliações. Enquanto que os isolados 7, 8 e 9 apresentaram mudança de sensibilidade ao longo das avaliações.\n\n**Fungicida Orkestra**: os isolados 1 e 3 foram altamente sensíveis em todas avaliações, o isolado 4 pouco sensível e o isolado 5 moderadamente sensível. Os isolados 2, 6, 7, 8 e 9 tiveram mudanças de sensibilidade ao longo das avaliações, sendo o isolado nas ultimas avaliações insensível, os isolados 6 e 8 pouco sensíveis e os isolados 7 e 9 moderadamente sensíveis.\n\n**Fungicida Mancozeb**: Todos isolados foram sensíveis ao produto.\n\nNão houve uma relação entre origem dos isolados e padrão de sensibilidade aos fungicidas testados.\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":true,"freeze":"auto","echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"paginicial.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.353","editor":"visual","theme":{"light":"flatly","dark":"darkly"},"message":false},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}